package org.example.lessons.lesson17

abstract class Shape(val name: String) {


    open fun area(): Double {
        return 0.0
    }

    open fun displayInfo() {
        println("–§–∏–≥—É—Ä–∞: $name")
        println("   üìè –ü–ª–æ—â–∞–¥—å: ${"%.2f".format(area())}")
    }
}

class Circle(
    val radius: Double
) : Shape("–ö—Ä—É–≥") {

    override fun area(): Double {
        return Math.PI * radius * radius
    }

    override fun displayInfo() {
        println("–§–∏–≥—É—Ä–∞: $name")
        println("–†–∞–¥–∏—É—Å: $radius")
        println("–ü–ª–æ—â–∞–¥—å: ${"%.2f".format(area())}")
        println("–î–ª–∏–Ω–∞ –æ–∫—Ä—É–∂–Ω–æ—Å—Ç–∏: ${"%.2f".format(2 * Math.PI * radius)}")
    }
}

class Square(
    val side: Double
) : Shape("–ö–≤–∞–¥—Ä–∞—Ç") {

    override fun area(): Double {
        return side * side
    }

    override fun displayInfo() {
        println("–§–∏–≥—É—Ä–∞: $name")
        println("–°—Ç–æ—Ä–æ–Ω–∞: $side")
        println("–ü–ª–æ—â–∞–¥—å: ${"%.2f".format(area())}")
        println("–ü–µ—Ä–∏–º–µ—Ç—Ä: ${"%.2f".format(4 * side)}")
    }
}

class Triangle(
    val sideA: Double,
    val sideB: Double,
    val angle: Double // —É–≥–æ–ª –º–µ–∂–¥—É —Å—Ç–æ—Ä–æ–Ω–∞–º–∏ A –∏ B –≤ –≥—Ä–∞–¥—É—Å–∞—Ö
) : Shape("–¢—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫") {

    override fun area(): Double {
        val angleInRadians = Math.toRadians(angle)
        return 0.5 * sideA * sideB * Math.sin(angleInRadians)
    }

    override fun displayInfo() {
        println("–§–∏–≥—É—Ä–∞: $name")
        println("–°—Ç–æ—Ä–æ–Ω—ã: $sideA, $sideB")
        println("–£–≥–æ–ª –º–µ–∂–¥—É —Å—Ç–æ—Ä–æ–Ω–∞–º–∏: ${angle}¬∞")
        println("–ü–ª–æ—â–∞–¥—å: ${"%.2f".format(area())}")
    }
}
